"""
 Используйте names.txt (щелкнуть правой кнопкой мыши
и выбрать 'Save Link/Target As...'), текстовый файл размером 46 КБ,
содержащий более пяти тысяч имен.
Начните с сортировки в алфавитном порядке.
Затем подсчитайте алфавитные значения каждого имени
и умножьте это значение на порядковый номер имени
в отсортированном списке для получения количества очков имени.

 Например, если список отсортирован по алфавиту,
имя COLIN (алфавитное значение которого 3 + 15 + 12 + 9 + 14 = 53)
является 938-м в списке. Поэтому,
имя COLIN получает 938 × 53 = 49714 очков.

 Какова сумма очков имен в файле?
"""

f = open('p022_names.txt', 'r')

names = f.read()

# Создание списка имён
names = names.split('","')

names[0] = names[0].replace('"', '')
names[-1] = names[-1].replace('"', '')

# Сортировка списка по алфавиту
names = sorted(names)

# Присвоение каждой букве алфавита её порядкового номера
alfabet = {'A': 1, 'B': 2, 'C': 3, 'D': 4, 'E': 5, 'F': 6, 'G': 7,
           'H': 8, 'I': 9, 'J': 10, 'K': 11, 'L': 12, 'M': 13, 'N': 14,
           'O': 15, 'P': 16, 'Q': 17, 'R': 18, 'S': 19, 'T': 20,
           'U': 21, 'V': 22, 'W': 23, 'X': 24, 'Y': 25, 'Z': 26}

# Сначала суммируются порядковые номера букв в каждом имени,
# затем умножается на порядковый номер имени в списке
# и суммируются уже эти произведения
answer = sum(sum(alfabet[letter] for letter in names[i]) * (i + 1)
             for i in range(len(names)))

"""
 Здесь можно было бы использовать функцию ord(), 
которая возвращает удельный вес каждой букве или строке в целых числах.
"""

print(answer)

f.close()
