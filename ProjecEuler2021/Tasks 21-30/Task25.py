"""
 Последовательность Фибоначчи определяется рекурсивным правилом:

  Fn = Fn−1 + Fn−2, где F1 = 1 и F2 = 1.

 Таким образом, первые 12 членов последовательности равны:

  F1 = 1
  F2 = 1
  F3 = 2
  F4 = 3
  F5 = 5
  F6 = 8
  F7 = 13
  F8 = 21
  F9 = 34
  F10 = 55
  F11 = 89
  F12 = 144

 Двенадцатый член F12 - первый член последовательности,
который содержит три цифры.

 Каков порядковый номер первого члена последовательности Фибоначчи,
содержащего 1000 цифр?
"""


def fib_num(digits):
    """Функция возвращает порядковый номер первого числа,
    который является членом последовательности Фибоначчи с n цифрами.
    """
    fn = [1, 1]
    count = 2

    while len(str(fn[-1])) != digits:
        # Сначала добавляется следующий член
        # последовательности Фибоначчи
        fn.append(fn[0] + fn[1])
        # Удаляется первый, потому что он будет не нужен в дальнейшем
        fn.remove(fn[0])
        # Прибавляется порядковый номер
        count += 1

    return count


print(fib_num(1000))
