# Программа для создания резервной копии указанных файлов v.4.0

import os
import time
from subprocess import call

# 1. Файлы и каталоги, которые необходимо скопировать,
# собираются в список.

print('Укажите путь к копируемым файлам (например, \\C:\\User \
или в двойных кавычках "\\C:\\Program files",\
 если в файле есть пробелы),\nа когда закончите, напишите "---": ')

filer = []

while True:
    fl = input('')
    if fl == '---':
        for f in filer:
            if f.startswith('C:\\'):
                pass
            else:
                filer.remove(f)
                
        break
        
    filer.append(fl)

# 2. Резервные копии должны храниться в основном каталоге резерва.
target_dir = 'D:\\Backup'

# 3. Файлы помещаются в zip-архив.
# 4. Именем для zip-архива служит текущая дата и время.
today = target_dir + os.sep + time.strftime('%Y%m%d')

# Текущее время служит именем zip-архива
now = time.strftime('%H%M%S')

# Запрашиваем комментарий пользователя для имени файла
comment = input('Введите комментарий --> ')
if len(comment) == 0:  # проверяем, введён ли комментарий
    target = today + os.sep + now + '.zip'
else:
    target = today + os.sep + now + '_' \
             + comment.replace(' ', '_') + '.zip'

# Создаём каталог, если его ещё нет
if not os.path.exists(today):
    os.mkdir(today)  # создание каталога
    print('Каталог успешно создан', today)

# Имя zip-файла
target = today + os.sep + now + '.zip'

# 5. Используем команду "zip" для помещения файлов в zip-архив
zip_command = "\"C:\Program Files\\7-Zip\\7z.exe\" \
a -tzip -ssw -mx1 -r0 {0} {1}".format(target, ' '.join(filer))

# Запускаем создание резервной копии
print(zip_command)
print(call(zip_command, shell=True))

retcode = call(zip_command, shell=True)

if retcode == 0:
    print('Резервная копия успешно создана в', target)
else:
    print('Создание резервной копии НЕ УДАЛОСЬ')

'''
 Наиболее важным усовершенствованием 
было бы прекращение использования os.system для создания архивов
а применение вместо него встроенных модулей zipfile или tarfile. 
Они являются частью стандартной библиотеки, 
поэтому всегда доступны для использования 
без зависимости от внешней программы zip на компьютере.
'''

'''
 Процесс разработки программного обеспечения
 
 В процессе создания программы мы прошли через несколько стадий. 
Эти стадии можно свести примерно в такой список:

• Что (Анализ)
• Как (Проектирование)
• Создание (Реализация)
• Тестирование (Тестирование и Отладка)
• Использование (Развёртывание и Оперирование)
• Поддержка (Усовершенствование)

 Процедура, которую мы прошли при написании сценария 
создания резервных копий рекомендуется и для других программ: 
Проведите анализ и проектирование. Начните реализацию 
с простейшей версии. Протестируйте и отладьте её. 
Попользуйтесь ею, чтобы убедиться, что она работает, как ожидалось. 
После этого добавляйте любые необходимые функции, 
повторяя цикл «Создание-Тестирование-Использование» столько раз,
сколько потребуется. Помните, Программы выращиваются, а не строятся.
'''
