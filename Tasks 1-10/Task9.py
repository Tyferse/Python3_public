"""
 Тройка Пифагора - три натуральных числа a < b < c,
для которых выполняется равенство

    a^2 + b^2 = c^2

 Например, 32 + 42 = 9 + 16 = 25 = 52.

 Существует только одна тройка Пифагора, для которой a + b + c = 1000.
Найдите произведение abc.
"""


'''
a = 1
b = 2
c = 3


while True:
    if (a < b < c) and (a**2 + b**2 == c**2):
        if a + b + c == 1000:
            print(a*b*c)
            break
    c += 1
    if c > 499:
        b += 1
        c = b + 1
    if b > 498:
        a += 1
        b = a + 1
        c = b + 1
        print('!')
'''


def list_mult(lst):
    s = 1
    for i in lst:
        s *= i
    return s


'''
 Первые формулы зависимостей троек Пифагора известны из трудов Евклида,
самая известная из них:

  a = 2mn, b = m2 − n2, c = m2 + n2, m > n
  
 Далее объявим функцию, которая перебирает все возможные значения m/n 
до тех пор, пока сумма троек не будет равна передаваемому значению stop.
Аргумент step задает диапазон для перебора m,n и увеличивается в двое
если при достижении значения stop мы так и не нашли нужную тройку:

 Выражение  fib=[2*n*m,(m**2)-(n**2),(m**2)+(n**2)]  
каждый раз задает значение 3-ки.
'''


def fibs(stop, step):
    p = step
    while True:
        for n in range(p-(p-1), p):
            for m in range(p-(p-2), p+1):
                if m > n:
                    fib = [2*n*m, (m**2)-(n**2), (m**2)+(n**2)]
                    if sum(fib) == stop:
                        return list_mult(fib)
        p += step


print(fibs(1000, 100))
