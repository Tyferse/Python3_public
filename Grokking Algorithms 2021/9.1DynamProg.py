# Динамическое программирование

"""
 Задача о рюкзаке

 В ернемся к задаче о рюкзаке из главы 8. У вас есть рюкзак,
в котором можн о унести товары общим весом до 4 фунтов.

 Есть три предмета, которые можно уложить в рюкзак.
Какие предметы следует положить в рюкзак,
чтобы стоимость добычи был максимальной?


 Простое решение

 Простой алгоритм выглядит так:
вы перебираете все возможные множества товаров
и находите множество с максимальной стоимостью.

 Такое решение работает, но очень медленно.
Для 3 предметов приходится обработать 8 возможных множеств,
для 4 - 16 и т. д. С каждым добавляемым предметом
количество множеств удваивается!
Этот алгоритм выполняется за время 0(2^n), что очень, очень медленно.

 Для любого сколько-нибудь значительного количества предметов
это неприемлемо. В главе 8 вы видели,
как вычисляются приближенные решения.
Такие решения близки к оптимальным, но могут не совпадать с ними.

 Как же вычислить оптимальное решение?


 Динамическое программирование

 Ответ: с помощью динамического программирования! Давайте посмотрим,
как работает этот метод. Процедура начинается с решения подзадач
с постепенным переходом к решению полной задачи.

 В задаче о рюкзаке начать следует с решения задачи для меньшего рюкзака
(или "подрюкзака"), а потом на этой основе
попытаться решить исходную задачу.

 Динамическое программирование - достаточно сложная концепция;
не огорчайтесь, если после первого прочтения
что-то останется непонятным. Примеры помогут вам разобраться в теме.

 Для начала я покажу вам алгоритм в действии.
После этого у вас наверняка появится много вопросов!
Я постараюсь ответить на них.

 Каждый алгоритм динамического программирования начинается с таблицы.
Вот как выглядит таблица для задачи о рюкзаке:

  Столбцы представляют размеры рюкзака от 1 до 4 фунтов

  По одной строке для каждого элемента: гитара, магнитофон, ноутбук

 Строки табл ицы представляют предметы,
а столбцы - емкость рюкзака от 1 до 4 фунтов. Все эти стол бцы нужны,
потому что они упрощают вычисление стоимостей «подрюкзаков».

 В исходном состоянии таблица пуста.
Нам предстоит заполнить каждую ячейку таблицы.
После того как таблица будет заполнена,
вы получите ответ на свою задачу. Пожалуйста,
внимательно разберитесь в происходящем. Нарисуйте собственную таблицу,
а мы вместе ее заполним.


 Строка Гитара

 Точная формула для вычисления значений в таблице
будет приведена позднее, а пока ограничимся общим описанием.
Начнем с первой строки.

 Строка снабжена пометкой «гитара»; это означает,
что вы пытаетесь уложить гитару в рюкзак.
В каждой ячейке принимается простое решение:
класть гитару в рюкзак или нет? Помните:
мы пытаемся найти множество элементов с максимальной стоимостью.

 В первой ячейке емкость рюкзака равна 1 фунту.
Гитара также весит 1 фунт - значит, она поместится в рюкзак! Итак,
стоимость этой ячейки составляет $1500, а в рюкзаке лежит гитара.
Начнем заполнять ячейку.

 По тому же принципу каждая ячейка в таблице
содержит список всех элементов,
которые помещаются в рюкзаке на данный момент.
Посмотрим на следующую ячейку.
На этот раз емкость рюкзака составляет 2 фунта. Понятно,
что гитара здесь поместится!

 Процедура повторяется для остальных ячеек строки. Вспомните,
что текущей является первая строка,
поэтому выбирать приходится только из одного предмета - гитары.
Считайте, что два других предмета пока недоступны

 Возможно, к этому моменту вы слегка сбиты с толку.
Почему все это делается для рюкзаков с емкостью 1, 2 и т. д.,
если в задаче речь идет о рюкзаке с емкостью 4 фунта? Помните,
что я говорил ранее? Метод динамического программирования начинает
с малых задач , а затем переходит к большой задаче.
Вы решаете подзадачи, которые помогут в решении большой задачи.
Читайте дальше, и ситуация постепенно прояснится.

 После того как первая строка будет заполнена,
таблица будет выглядеть так:

 Помните, что мы стремимся обеспечить максимальную стоимость
предметов в рюкзаке. Эта строка представляет
текущую лучшую оценку максимума. Итак, на данный момент
из этой строки следует, что для рюкзака с емкостью 4 фунта
максимальная стоимость предметов составит $1500.

 Вы знаете, что это решение неокончательно.
В процессе работы алгоритма оценка будет уточняться.

 Магнитофон

 Займемся следующей строкой, которая относится к магнитофону.
Теперь, когда вы перешли ко второй строке,
появляется выбор между магнитофоном и гитарой.
В каждой строке можно взять предмет этой строки или предметы,
находящиеся в верхних строках. Таким образом,
сейчас нельзя выбрать ноутбук, но можно выбрать магнитофон и/или гитару.
Начнем с первой ячейки (рюкзак с емкостью 1 фунт).
Текущая максимальная стоимость предметов,
которые можно положить в рюкзак с емкостью 1 фунт, составляет $1500.

 Брать магнитофон или нет?

 Емкость рюкзака составляет 1 фунт. Поместится туда магнитофон? Нет,
он слишком тяжел! Так как магнитофон не помещается в рюкзак,
максимальная оценка для 1-фунтовоrо рюкзака остается равной $1500.

 То же самое происходит со следующими двумя клетками.
Емкость этих рюкзаков составляет 2 и 3 фунта соответственно.
Старая максимальная стоимость для обеих ячеек была равна $1500.

 Магнитофон все равно не помещается, так что оценка остается неизменной.
А если емкость рюкзака увеличивается до 4 фунтов? Ага,
магнитофон наконец-то войдет в рюкзак!
Старая максимальная стоимость была равна $1500,
но если вместо гитары положить магнитофон, она увеличится до $3000!
Берем магнитофон.

 Оценка только что обновилась! Имея рюкзак емкостью 4 фунта,
вы можете положить в него товары стоимостью по крайней мере $3000.
Из таблицы видно, что оценка постепенно возрастает.


 Ноутбук

 А теперь проделаем то же для ноутбука! Ноутбук весит 3 фунта,
поэтому он не поместится в рюкзак с емкостью 1 или 2 фунта.
Оценка для первыхдвух ячеек остается на уровне $1500.

 Для 3 фунтов старая оценка составляла $1500.
Но теп ерь вы можете выбрать ноутбук, который стоит $2000.
Следовательно, новая максимал ьная оценка равна $2000!

 При 4 фунтах ситуация становится по-настоящему интересной.
Это очень важная часть. В настоящее время оценка составляет $3000.
В рюкзак можно положить ноутбук, но он стоит всего $2000.

  $3000      или   $2000
  МАГНИТОФОН     НОУТБУК

 Так-так, старая оценка была лучше. Но постойте!
Ноутбук весит всего 3 фунта, так что 1 фунт еще свободен!
На это место можно еще что-нибудь положить.

  $3000        или   ( $2000               ???                )
  МАГНИТОФОН         ( НОУТБУК  +  свободное место на 1 фунт  )

 Какую максимальную стоимость можно разместить в 1 фунте?
Да вы же уже вычислили ее!

 В соответствии с последней оценкой в свободном месте емкостью в 1 фунт
можно разместить гитару стоимостью $1500. Следовательно,
настоящее сравнение выглядит так:

  $3000        или   ( $2000       $1500  )
  МАГНИТОФОН         ( НОУТБУК  +  ГИТАРА )

 Вы удивлялись, зачем мы вычисляем максимальную стоимость
для рюкзаков меньшей емкости? Надеюсь, теперь все стало на свои места!
Если в рюкзаке остается свободное место,
вы можете использовать ответы на эти подзадачи для определения того,
чем заполнить это пространство. Вместо магнитофона лучше взять
ноутбук + гитару за $3500. В завершающем состоянии таблица выглядит так:

 Итак, мы получили ответ: максимальная стоимость товаров,
которые поместятся в рюкзак, равна $3500 - для гитары и ноутбука.

 Возможно, вы подумали, что я воспользовался другой формулой
для вычисления стоимости последней ячейки. Это связано с тем,
что я опустил некоторые лишние сложности
при заполнении предыдущих ячеек. Стоимость каждой ячейки вычисляется
по постоянной формуле, которая выглядит так:

  cell[i][j] = максимум ( 1. предыдущий максимум
                        ( (значение в cell[i-1][j])
                        ( или
                        ( стоимость текущего элемента +
                        ( стоимость оставшегося пространства
                        ( (cell[i-1][j - вес предмета]

 Применяя эту формулу к каждой ячейке таблицы,
вы получите такую же таблицу, как у меня. Помните,
что я говорил о решении подзадач?

 Вы объединили решения двух подзадач для решения еще одной,
большей задачи.


 Задача о рюкзаке: вопросы

 Вам все еще кажется, что это какой-то фокус?
В этом разделе я отвечу на некоторые часто задаваемые вопросы.

 Что произойдет при добавлении элемента?


 Представьте, что вы увидели четвертый предмет,
который тоже можно засунуть в рюкзак!
Вместе со всем предыдущим добром можно также украсть iPhone.

 Придется ли пересчитывать все заново с новым предметом? Нет. Напомню,
что динамическое программирование последовательно строит решение
на основании вашей оценки. К настоящему моменту
максимальные стоимости выглядят так:

 Это означает, что в рюкзак с емкостью 4 фунта
можно упаковать товары стоимостью до $3500. И вы полагали,
что это итоговый максимум. Но давайте добавим новую строку для iPhone.

 Оказывается, в таблице появляется новый максимум!
Попробуйте заполнить последнюю строку, прежде чем читать дальше.

 Начнем с первой ячейки. iPhone сам по себе помещается в рюкзак
с емкостью 1 фунт. Старый максимум был равен $1500,
но iPhone стоит $2000. Значит, берем iPhone.

 В следующей ячейке можно разместить iPhone и гитару.

 Для ячейки 3 ничего лучшего, чем снова взять iPhone вместе с гитарой,
все равно не найдется, поэтому оставим этот вариант.

 А вот в последней ячейке ситуация становится более интересной.
Текущий максимум равен $3500. Вы снова можете взять iPhone,
и у вас еще останется свободное место на 3 фунта.

        $3500       или  ( $2000   +           ???               )
  ноутбук + гитара       ( IPhone     свободное место на 3  фунта)

 Но эти 3 фунта можно заполнить на $2000! $2000 от iPhone
+ $2000 из старой подзадачи: получается $4000. Новый максимум!
Вот как выглядит новая завершающая таблица.

 Вопрос: может ли значение в столбце уменьшиться? Такое возможно?

 Подумайте над ответом, прежде чем продолжить чтение.

 Ответ: нет. При каждой итерации сохраняется текущая оценка максимума.
Эта оценка ни при каких условиях не может быть меньше предыдущей!


 Упражнения

 9.1 Предположим, к предметам добавился еще один: МРЗ-плеер.
Он весит 1 фунт и стоит $1000. Стоит ли брать его?
 Ответ: стоит, так как если взять IPhone, гитару и плейер,
суммарно получится новый максимум - $4500.


 Что произойдет при изменении порядка строк?

 Изменится ли ответ? Допустим, строки заполняются в другом порядке:
магнитофон, ноутбук, гитара. Как будет выглядеть таблица?
Заполните таблицу самостоятельно, прежде чем двигаться дальше.
Таблица должна выглядеть так:

 Ответ не изменился. Он не зависит от порядка строк.


 Можно ли заполнять таблицу по столбцам, а не по строкам?

 Попробуйте сами! В данной задаче это ни на что не влияет,
но в других задачах возможны изменения.


 Что произойдет при добавлении меньшего элемента?

 Допустим, вы можете выбрать ожерелье, которое весит 0,5 фунта
и стоит $1000. Пока структура таблицы предполагает,
что все веса являются целыми числами. Теперь вы решаете взять ожерелье.
Остается еще 3,5 фунта. Какую максимальную стоимость можно разместить
в объеме 3,5 фунта? Неизвестно!
Вы вычисляли стоимость только для рюкзаков с емкостью 1, 2, 3 и 4 фунта.
Теперь придется определять стоимость для рюкзака на 3,5 фунта.

 Из-за ожерелья приходится повысить точность представления весов,
поэтому таблица должна измениться.


 Можно ли взять часть предмета?

 Допустим, вы наполняете рюкзак в продуктовом магазине.
Вы можете украсть мешки с чечевицей и рисом.
Если весь мешок не помещается, его можно открыть и отсыпать столько,
сколько унесете. В этом случае вы уже не действуете по принципу
"все или ничего" - можно взять только часть предмета.
Как решить такую задачу методом динамического программирования?

 Ответ: никак. В решении, полученном методом
динамического программирования, вы либо берете предмет, либо не берете.
Алгоритм не предусматривает возможность взять половину предмета.

 Однако проблема легко решается с помощью жадного алгоритма!
Сначала вы берете самый ценный предмет - настолько большую его часть,
насколько возможно. Когда самый ценный предмет будет исчерпан,
вы берете максимально возможную часть следующего
по ценности предмета и т.д .

 Допустим, вы можете выбирать из следующих товаров.

  киноа       дал       рис
  $6/фунт     $3/фунт   $2/фунт

 Фунт киноа стоит дороже, чем фунт любого другого товара. А раз так -
набирайте столько киноа, сколько сможете унести!
И если вам удастся набить им свой рюкзак,
то это и будет лучшее из возможных решений.

 Если киноа кончится, а в рюкзаке еще остается свободное место,
возьмите следующий по ценности товар и т. д.
"""
